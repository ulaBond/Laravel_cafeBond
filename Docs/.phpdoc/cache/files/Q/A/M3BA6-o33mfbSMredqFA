1706205376
waR3U4bTeM%3Abab800cb64eba82163ab93482194adc8-c516249aef1262c0d95a5acd34a17b18
s:9956:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:8:"Routing.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:14:" * description";N;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:36:"Yuliia Bondarenko JKTV21 Year - 2023";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:0:"";}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:9:"copyright";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:14:"Copyright 2023";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"c516249aef1262c0d95a5acd34a17b18";s:39:" phpDocumentor\Reflection\Php\File name";s:7:"web.php";s:39:" phpDocumentor\Reflection\Php\File path";s:7:"web.php";s:41:" phpDocumentor\Reflection\Php\File source";s:5148:"<?php
/**
 * Routing. 
 * @author Yuliia Bondarenko JKTV21 Year - 2023
 * @copyright Copyright 2023 
 */
use Illuminate\Support\Facades\Route;
use App\Http\Controllers\Controller;
use App\Http\Controllers\CategoryController;
use App\Http\Controllers\ProductController;
use App\Http\Controllers\UserController;
use App\Http\Controllers\AuthController;

Route::get('/', function () {
        return view('startMainPage');//Main page site
    //return view('start');// старт - форма Login
});
Route::get('/listMany', [CategoryController::class, 'listMany']);//переход на страницу Products со списком категорий
Route::get('/productsbycategory/{id}', [CategoryController::class, 'productslist']);
Route::get('/aboutUs', [CategoryController::class, 'about_us']);//переход на страницу About us...
Route::get('/contact', [CategoryController::class, 'contact']);//переход на страницу Contact...
Route::get('/show/{product}', [ProductController::class, 'show']);
//------------------------
Route::get('/formorder', [ProductController::class, 'form_order']);//форма заказа
Route::post('/formorder', [ProductController::class, 'formstore']);//обработка формы заказа
Route::get('/orderconfirm/{id}', [ProductController::class, 'orderconfirm']);//id order
//-------------------------
Route::get('/register', [UserController::class, 'register']);//вывод страницы - форма register
Route::post('/register', [UserController::class, 'adduser']);//обработка формы register
//----------------------------------------------------------------------
Route::group(['middleware'=>['auth']],function(){
    //только для авторизованных пользователей
Route::get('/dashboard', [Controller::class, 'dashboard'])->name('dashboard');     
//--------------------------------------admin, manager 
Route::middleware('manager')->group(function(){ //Здесь все маршруты для MANAGER и ADMIN
//------------------------Category list CRUD ----------------------
        Route::get('/categorylist', [CategoryController::class, 'index']);
        Route::get('/addcategory', [CategoryController::class, 'create']);
        Route::post('/addcategory', [CategoryController::class, 'store']);

        Route::get('/editcategory/{category}', [CategoryController::class, 'edit']);
        Route::post('/editcategory/{category}', [CategoryController::class, 'update']);

        Route::delete('/deletecategory/{category}', [CategoryController::class, 'destroy']);
//------------------------Product list CRUD ----------------------
// список - вывод на страницу - get
        Route::get('/productlist', [ProductController::class, 'index']);
        // обработка данных формы - выбор категории - post
        Route::post('/productBycategory', [ProductController::class, 'productByCategory']);
        // показать форму добавления новости - get
        Route::get('/addproduct', [ProductController::class, 'create']);
        //– обработка формы добавления новости - post
        Route::post('/addproduct', [ProductController::class, 'store']);
        // показать форму редактирования новости - get
        Route::get('/editproduct/{product}', [ProductController::class, 'edit']);
        //– обработка формы редактирования новости - post
        Route::post('/editproduct/{product}', [ProductController::class, 'update']);
        // показать форму удаления новости - get
        Route::get('/deleteproduct/{product}', [ProductController::class, 'delete']);
        //– обработка формы удаления новости - post
        Route::post('/deleteproduct/{product}', [ProductController::class, 'updelete']);
});
//------------------------- ADMIN -------------------------------
Route::middleware('admin')->group(function(){
        //--------------------------User CRUD----------------------
        Route::get('/users', [UserController::class, 'index']);
        Route::post('/userByrole', [UserController::class, 'userByrole']);
        Route::get('/adduser', [UserController::class, 'create']);
        Route::post('/adduser', [UserController::class, 'store']);
}); 
Route::get('/profile/{user}', [UserController::class, 'edit']);//редактирование профиля для пользователя
        Route::get('/edituser/{user}', [UserController::class, 'edit']);
        Route::post('/edituser/{user}', [UserController::class, 'update']);
});//end of Route::group(['middleware'=>['auth']],function(){
//--------------------- login to admin panel
Route::get('/login', [AuthController::class, 'login'])->name('login');//вывод страницы - форма login
Route::post('/login', [AuthController::class, 'authentificate']);//обработка формы login
Route::get('/logout', [AuthController::class, 'logout'])->name('logout');//";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";